// Copyright (C) 2016  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "08/12/2018 01:51:25"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Block21
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Block21_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clear;
reg clock;
reg enable;
// wires                                               
wire pin_name1;
wire pin_name2;
wire pin_name3;
wire pin_name4;
wire pin_name5;
wire pin_name6;
wire pin_name7;
wire pin_name8;
wire pin_name9;

// assign statements (if any)                          
Block21 i1 (
// port map - connection between master ports and signals/registers   
	.clear(clear),
	.clock(clock),
	.enable(enable),
	.pin_name1(pin_name1),
	.pin_name2(pin_name2),
	.pin_name3(pin_name3),
	.pin_name4(pin_name4),
	.pin_name5(pin_name5),
	.pin_name6(pin_name6),
	.pin_name7(pin_name7),
	.pin_name8(pin_name8),
	.pin_name9(pin_name9)
);
initial 
begin 
#1000000 $finish;
end 

// clear
initial
begin
	clear = 1'b0;
	clear = #630000 1'b1;
	clear = #10000 1'b0;
end 

// clock
initial
begin
	repeat(31)
	begin
		clock = 1'b0;
		clock = #10000 1'b1;
		# 10000;
	end
	clock = 1'b0;
	clock = #10000 1'b1;
	clock = #10000 1'b0;
	clock = #10000 1'b1;
	# 10000;
	repeat(17)
	begin
		clock = 1'b0;
		clock = #10000 1'b1;
		# 10000;
	end
end 

// enable
initial
begin
	enable = 1'b1;
	enable = #10000 1'b0;
	enable = #580000 1'b1;
end 
endmodule

